{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\lrush\\\\Documents\\\\Bootcamp-Repository\\\\rpg-dream-team\\\\src\\\\components\\\\HomePage.js\";\nimport React, { useContext } from \"react\";\nimport Card from \"./Card\";\nimport CharacterContext from '../utils/CharacterContext';\n\nconst Home = () => {\n  const Context = useContext(CharacterContext);\n  console.log(Context.bunchFunctions);\n  const Characters = Context.state;\n  const addCharacter = Context.bunchFunctions.addCharacter; //Sort the funtion Aphabetically\n\n  console.log(Context);\n  console.log(Characters);\n\n  const compare = (a, b) => {\n    // Use toUpperCase() to ignore character casing\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n\n    let compare = (a, b) => {\n      // Use toUpperCase() to ignore character casing\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      let comparison = 0;\n\n      if (nameA > nameB) {\n        comparison = 1;\n      } else if (nameA < nameB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    onClick: addCharacter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, Characters.map(character => React.createElement(Card, {\n    key: character.id,\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["c:/Users/lrush/Documents/Bootcamp-Repository/rpg-dream-team/src/components/HomePage.js"],"names":["React","useContext","Card","CharacterContext","Home","Context","console","log","bunchFunctions","Characters","state","addCharacter","compare","a","b","nameA","name","toUpperCase","nameB","comparison","map","character","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;;AAIA,MAAMC,IAAI,GAAE,MAAM;AACd,QAAMC,OAAO,GAAEJ,UAAU,CAACE,gBAAD,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,cAApB;AAFc,QAGCC,UAHD,GAGeJ,OAHf,CAGNK,KAHM;AAAA,QAINC,YAJM,GAIUN,OAAO,CAACG,cAJlB,CAING,YAJM,EAKf;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ;;AACD,QAAMG,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB;AACA,UAAMC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAd;AACA,UAAMC,KAAK,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAd;;AAEA,QAAKL,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB;AACA,YAAMC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAd;AACA,YAAMC,KAAK,GAAGJ,CAAC,CAACE,IAAF,CAAOC,WAAP,EAAd;AAGA,UAAIE,UAAU,GAAG,CAAjB;;AACA,UAAIJ,KAAK,GAAGG,KAAZ,EAAmB;AACjBC,QAAAA,UAAU,GAAG,CAAb;AACD,OAFD,MAEO,IAAIJ,KAAK,GAAGG,KAAZ,EAAmB;AACxBC,QAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,aAAOA,UAAP;AACD,KAbH;AAcD,GAnBA;;AAwBH,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAER,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,UAAU,CAACW,GAAX,CAAgBC,SAAD,IAAgB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAIA,SAAS,CAACC,EAAvB;AAA2B,IAAA,SAAS,EAAID,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CADD,CADJ;AAMC,CAtCD;;AAwCA,eAAejB,IAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Card from \"./Card\"\r\nimport CharacterContext from '../utils/CharacterContext'\r\n\r\n\r\n\r\nconst Home= () => {\r\n    const Context= useContext(CharacterContext);\r\n    console.log(Context.bunchFunctions)\r\n    const { state: Characters} = Context\r\n    const { addCharacter} = Context.bunchFunctions\r\n   //Sort the funtion Aphabetically\r\n   console.log(Context)\r\n    console.log(Characters)\r\n   const compare = (a, b) => {\r\n    // Use toUpperCase() to ignore character casing\r\n    const nameA = a.name.toUpperCase();\r\n    const nameB = b.name.toUpperCase();\r\n  \r\n    let  compare = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const nameA = a.name.toUpperCase();\r\n        const nameB = b.name.toUpperCase();\r\n        \r\n      \r\n        let comparison = 0;\r\n        if (nameA > nameB) {\r\n          comparison = 1;\r\n        } else if (nameA < nameB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      }\r\n  }\r\n  \r\n    \r\n    \r\n    \r\nreturn(\r\n    <div className=\"App\" onClick={addCharacter}>\r\n    {Characters.map((character) =>  <Card key = {character.id} character = {character}/>)}\r\n   </div>\r\n\r\n  );\r\n}\r\n \r\nexport default Home;"]},"metadata":{},"sourceType":"module"}